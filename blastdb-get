#!/bin/sh
#
#  blastdb-get - easily pull sequence data or metadata from a BLAST database
#  Copyright (C) 2016  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Part of https://github.com/zwets/blast-galley

# Defaults
DATABASE="nt"
COLUMNS="f"
QUERY=""
SEP='\t'

# Function to write arguments to stderr if VERBOSE is set
emit() {
    if [ $VERBOSE ]; then echo "$(basename "$0"): $*" >&2; fi
}

# Function to exit this script with an error message on stderr
err_exit() {
    echo "$(basename "$0"): $*" >&2
    exit 1
}

# Function to show usage information and exit
usage_exit() {
    echo "
Usage: $(basename "$0") [OPTIONS] ID ...

  Retrieve sequence data or metadata for each ID from a BLAST database.

  Writes to stdout the FASTA sequences or a table of metadata (--table).
  When ID is '-' reads IDs from standard input.  When ID is 'all', returns
  all entries in the database.

  Each ID is an accession (the primary key for NCBI since late 2016), or
  some other supported sequence identifier.  Valid sequence identifiers:
  http://io.zwets.it/blast-cmdline-ref/#about-sequence-identifiers
  
  OPTIONS
   -t|--table COLS  instead of FASTA, return a table specified by COLS
   -s|--sep CHAR    column separator character (default: tab)
   -k|--header      prepend table header (default: no)
   -d|--db DB       database (default: $DATABASE)
   -v|--verbose     verbose output
   -h|--help        this help

  COLS
   The COLS argument to the --table option is a string of letters specifying
   the column ordering for tabular output.  Each letter is one of:
   | a Accession | s Sequence data | l Length  | t Title   | T Taxonomy ID |
   | o OID       | g GI            | P PIG     | S SciName | L TaxName     |

  SEE ALSO
   blastdb-find searches through a BLAST database on metadata fields
"
    exit ${1:-1}
}


# Parse options

unset HEADER
while [ $# -ne 0 -a "$(expr "$1" : '\(.\)..*')" = "-" ]; do
    case $1 in
    --table=*)
        COLUMNS="${1#--table=}"
        ;;
    -t|--table)
        shift
        COLUMNS="$1"
        ;;
    --sep=*)
        SEP="${1#--sep=}"
        ;;
    -s|--sep)
        shift
        SEP="$1"
        ;;
    -k|--header)
        HEADER=1
        ;;
    --db=*)
        DATABASE="${1#--db=}"
        ;;
    -d|-db|--db)
        shift
        DATABASE="$1"
        ;;
    -h|--help)
        usage_exit 0
        ;;
    -v|--verbose)
        VERBOSE=1
        ;;
    *) usage_exit
        ;;
    esac
    shift
done

# Check arguments

[ $# -ge 1 ] || usage_exit

# Handle the stdin case

QUERY=""
if [ "$1" = "-" ]; then
    shift
    while read V; do QUERY="${QUERY:+$QUERY,}$V"; done
fi

# Handle command-line args ("all" needs no special handling, blastdbcmd handles it)

while [ $# -gt 0 ]; do
    QUERY="${QUERY:+$QUERY,}$1"
    shift
done

# Check environment for NCBI Blast+

[ -n "$NCBI" ] || [ -n "$BLASTDB" ] || echo "$(basename "$0"): warning: neither BLASTDB nor NCBI is set (see http://io.zwets.it/blast-cmdline-ref)"

# Output Format options

OUTFMT="$(echo "$COLUMNS" | sed -re "s/(.)/%\1$SEP/g" -e 's/.$//')"

[ "$COLUMNS" = "f" ] || [ -z "$HEADER" ] || echo "$OUTFMT"

# Invoke the command

blastdbcmd -entry "$QUERY" -db "$DATABASE" -outfmt "$OUTFMT"

exit 0

# vim: sts=4:sw=4:ai:si:et:
